single field which will show options (dropdown) 

const thisticketField = getFieldById("customfield_10143");
const context = await getContext();  // Correctly fetching context

/// Get the current issue ID
const issueId = context.extension.issue.id;

// Fetch the issue details to get the status
const res = await makeRequest(`/rest/api/3/issue/${issueId}`);
const issueStatusId = res.body.fields.status.id;

// Fetch roles for the current user in this project
const projectId = context.extension.project.id;
const getProjectRolesForCurrentUser = await makeRequest(`/rest/api/3/project/${projectId}/roledetails?currentMember=true`);
const roleNames = getProjectRolesForCurrentUser.body.map(item => item.name);

// Define the required role
const requiredRole = "Dev Lead";

// Check if the user has the 'Dev Lead' role
const userHasRequiredRole = roleNames.includes(requiredRole);

// Define the statuses where the fields should be visible but not editable
const visibleStatuses = ["10039", "10018", "10013", "10036", "10014", "10022", "10016", "10017", "10015", "10023", "10020", "10021","10019","10031"];

// Logic to handle field visibility and editability
if (issueStatusId === "10013" && userHasRequiredRole) {
    // Make the fields visible and editable if the status is "10013" and the user has the 'Dev Lead' role
    thisticketField.setVisible(true);
    thisticketField.setReadOnly(false);
} else if (visibleStatuses.includes(issueStatusId)) {
    thisticketField.setVisible(true);
    thisticketField.setReadOnly(true);   // Read-only
} else {
    // Hide the fields if the status is not in the defined list
    thisticketField.setVisible(false);
}

